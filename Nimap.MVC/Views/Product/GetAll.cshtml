@using PagedList.Mvc;
@using PagedList
@*@model IEnumerable<Nimap.MVC.Models.ProductVM>*@
@model IPagedList<Nimap.MVC.Models.ProductVM>



<h3>List of all Products</h3>

<p>
    @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-success" })
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.First().Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Price)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().CategoryId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().CategoryName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().IsActiveText)
        </th>
        <th>Actions</th>
    </tr>

    @foreach (var item in Model)
    {
        using (Html.BeginForm("Delete", "Product", new { id = item.Id }))
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CategoryId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CategoryName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsActiveText)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "btn btn-warning btn-sm" })
                    @Html.ActionLink("Details", "Get", new { id = item.Id }, new { @class = "btn btn-info btn-sm" })
                    <input type="submit" value="Delete" class="btn btn-danger btn-sm" onclick="return confirm('Are you sure you want to delete record with ID = @item.Id');" />
                </td>
            </tr>
        }

    }

</table>
@Html.PagedListPager(Model, page => Url.Action("GetAll", new { page, searchBy = Request.QueryString["searchBy"], search = Request.QueryString["search"] }))